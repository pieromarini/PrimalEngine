option(ENABLE_CPPCHECK "Enable static analysis with cppcheck" OFF)
option(ENABLE_CLANG_TIDY "Enable static analysis with clang-tidy" OFF)
option(CLANG_TIDY_FIX "Perform fixes with clang-tidy" OFF)

# TODO: Fix. Apply only to relevant targets
if(ENABLE_CPPCHECK)
	find_program(CPPCHECK cppcheck)
	if(CPPCHECK)
		set(CMAKE_CXX_CPPCHECK ${CPPCHECK} --suppress=missingInclude --enable=all
			--inconclusive)
	else()
		message(SEND_ERROR "cppcheck requested but executable not found")
	endif()
endif()

if(ENABLE_CLANG_TIDY)
	find_program(CLANG_TIDY_EXE NAMES "clang-tidy" DOC "Path to clang-tidy executable")
	if(CLANG_TIDY_EXE)
		if(CLANG_TIDY_FIX)
			set_target_properties(${ENGINE_LIB} PROPERTIES CXX_CLANG_TIDY "${CLANG_TIDY_EXE} -fix")
			set_target_properties(${EXEC_NAME} PROPERTIES CXX_CLANG_TIDY "${CLANG_TIDY_EXE} -fix")
		else()
			set_target_properties(${ENGINE_LIB} PROPERTIES CXX_CLANG_TIDY "${CLANG_TIDY_EXE}")
			set_target_properties(${EXEC_NAME} PROPERTIES CXX_CLANG_TIDY "${CLANG_TIDY_EXE}")
		endif()
	else()
		message(SEND_ERROR "clang-tidy requested but executable not found")
	endif()
endif()
